


/////////
// https://forum.bela.io/d/863-monome-grid-osc_bank-bela/5
// https://monome.org/docs/serialosc/raspbian/
// but before doing the serialoscd configure: 
// Changing line 257 of serialosc/wscript to
// conf.env.append_unique("CFLAGS", ["-std=c99", "-Wall", "-Wno-error"])
// Serialosc will compile but serialoscd is not found
// with https://github.com/monome/serialosc/issues/53

// to test serialoscd (maybe plug a monome grid in? use ./serialoscd)

// https://monome.org/docs/serialosc/setup/
// https://monome.org/docs/serialosc/serial.txt
// note have to generate auto_conf file by ./waf configure and move it into correct directory
// serialosc.h refers to files in the folder serialosc so put them directly under Bela i.e. here:

// Create a folder serialosc_helpers in the Bela folder and copy the following files / folders 
// https://github.com/daniel-bytes/serialosc_example/tree/master/serialosc_example
// Note the folder renames since SerialOsc is looking for specific folder names it seems
//root@bela:~/Bela/serialosc_helpers# ls
//MonomeDevice.h  SerialOsc.cpp  SerialOsc.h  ip  osc





//UdpClient myUdpClient;

// ...

//
// Example serial osc data handler.
// 
/*

class MonomeDemo
	: public SerialOsc::Listener
{
public:
	MonomeDemo(SerialOsc *osc)
		: osc(osc)
	{
		osc->start(this);
	}

public:
	virtual void deviceFound(const MonomeDevice * const device)
	{
		std::cout << "Found device " << device->id << " (type " << device->type << ")." << std::endl;
		osc->sendDeviceLedAllCommand(device, false);
	}

	virtual void deviceRemoved(const std::string &id)
	{
		std::cout << "Device " << id << " removed." << std::endl;
	}
	
	virtual void buttonPressMessageReceived(MonomeDevice *device, int x, int y, bool state)
	{
		std::cout << "Button press from " << device->id << " received. Prefix = " << device->prefix << ",  x = " << x << ", y = " << y << ", state = " << state << std::endl;
		osc->sendDeviceLedCommand(device, x, y, state);
	}

private:
	SerialOsc *osc;
};


//int main(int argc, const char* argv[])
int main()
{
	std::string input;
	SerialOsc osc("test", 13000);
	MonomeDemo device(&osc);

	while (input != "q") {
		std::cout << "type 'q' to quit." << std::endl;
		std::getline(std::cin, input);
	}

	osc.stop();

	return 0;
}
*/





//#include <libraries/UdpClient/UdpClient.h>

// see below
//#include <serialosc_example/serialosc_example/SerialOsc.h>



// Monome Grid
// To install serialosc from sources on linux follow: 
// // https://monome.org/docs/serialosc/raspbian/
// (copied from above)
// raspberry pi os
// precompiled packages
// monome software packages from the ubuntu ppa work great on raspberry pi os. to install them on raspbian stretch, add the repository signing key first:

// gpg --keyserver keyserver.ubuntu.com --recv DD9300F1
// gpg --export --armor DD9300F1 | sudo apt-key add -
// then add the repository url to your sources.list:

// echo "deb http://ppa.launchpad.net/artfwo/monome/ubuntu bionic main" | sudo tee /etc/apt/sources.list.d/monome.list
// finally run:

// sudo apt update
// sudo apt install serialosc
// the package is configured to start serialosc automatically on boot and save the grid state under /var/lib/serialosc. to disable this behaviour, simply run:

// sudo systemctl disable serialosc.service
// compiling from source
// while this build script is specific to raspberry pi os (for the raspberry pi), there’s a good change it’ll work with other embedded linux distributions and devices.

// this script will install libmonome and serialosc. these are essential for communicating with grids and arcs on linux.

// sudo apt-get install liblo-dev
// git clone https://github.com/monome/libmonome.git
// cd libmonome
// ./waf configure
// ./waf
// sudo ./waf install
// cd ..

// sudo apt-get install libudev-dev libavahi-compat-libdnssd-dev libuv1-dev
// git clone https://github.com/monome/serialosc.git
// cd serialosc
// git submodule init && git submodule update
// ./waf configure --enable-system-libuv
// ./waf
// sudo ./waf install
// cd ..
// to run serialosc, execute serialoscd.
// (end copy)

// To get serialosc_example on the bela 
// cd /root/Bela/projects/SimonSaysSeeqBela

// git clone https://github.com/daniel-bytes/serialosc_example.git


// SerialOsc is expecting certain files under osc

// cd /root/Bela/projects/SimonSaysSeeq6/serialosc_example/serialosc_example
// and create some symbolic links there

// To mitigate error:
// In file serialosc_example/serialosc_example/osckpack/ip/posix/NetworkingUtils.cpp: 'ip/NetworkingUtils.h' file not found column: 10, line: 37


// ln -s /root/Bela/projects/SimonSaysSeeq6/serialosc_example/serialosc_example/osckpack/osc osc

//        source                                                                            link
// ln -s /root/Bela/projects/SimonSaysSeeq6/serialosc_example/serialosc_example/osckpack/ip /root/Bela/projects/SimonSaysSeeq6/serialosc_example/serialosc_example/osckpack/ip/posix/ip

// Get rid of win32
///Bela/projects/SimonSaysSeeq6/serialosc_example/serialosc_example/osckpack/ip# rmdir  win32




// From https://monome.org/docs/serialosc/linux/


// root@bela:~# cat /etc/*release 
// PRETTY_NAME="Debian GNU/Linux 9 (stretch)"
// NAME="Debian GNU/Linux"
// VERSION_ID="9"
// VERSION="9 (stretch)"
// VERSION_CODENAME=stretch
// ID=debian
// HOME_URL="https://www.debian.org/"
// SUPPORT_URL="https://www.debian.org/support"
// BUG_REPORT_URL="https://bugs.debian.org/"


// This doesn't work....
// sudo apt-get install dirmngr
// sudo apt install software-properties-common
// sudo add-apt-repository ppa:artfwo/monome

// OR
// Add the following to:
///etc/apt/sources.list


//deb http://ppa.launchpad.net/artfwo/monome/ubuntu stretch main 
//deb-src http://ppa.launchpad.net/artfwo/monome/ubuntu stretch main 

//https://monome.org/docs/serialosc/raspbian/

// sudo apt-get update
// sudo apt-get install libmonome
// sudo apt-get install serialosc


